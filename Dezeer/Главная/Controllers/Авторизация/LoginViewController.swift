//
//  LoginViewController.swift
//  Dezeer
//
//  Created by Levin Ivan on 11.07.2020.
//  Copyright (c) 2020 Levin Ivan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: HUDDisplayLogic, ErrorMessageDisplayLogic {
    func displayFetchingResult(viewModel: Login.Fetching.ViewModel)
}

class LoginViewController: UIViewController {
    var interactor: LoginBusinessLogic?
    var router: (LoginRoutingLogic & LoginDataPassing)?
    var hud = MiniHUD()
    lazy var customView = self.view as! LoginView  // swiftlint:disable:this force_cast
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
        configureHUD()
        fetchData()
    }
    
    override func loadView() {
        view = LoginView()
    }
    
    deinit {
        print("LoginViewController deinit")
    }
    
    // MARK: - Configuration
    
    private func configure() {
        
    }
    
    // MARK: - Work
    
    private func fetchData() {
        let request = Login.Fetching.Request()
        interactor?.fetchData(request: request)
    }
    
}

// MARK: - LoginDisplayLogic
extension LoginViewController: LoginDisplayLogic {
    
    func displayFetchingResult(viewModel: Login.Fetching.ViewModel) {
        
    }
    
}

// MARK: - TryAgainDelegate
extension LoginViewController: TryAgainDelegate {
    
    func floatButtonTap(_ tryAgainView: TryAgainView) {
        fetchData()
    }
    
}
